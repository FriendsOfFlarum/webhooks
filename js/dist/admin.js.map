{"version":3,"sources":["webpack://@reflar/webhooks/webpack/bootstrap","webpack://@reflar/webhooks/external \"flarum.core.compat['Model']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Button']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Select']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['app']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Alert']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['models/Forum']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['utils/mixin']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['extend']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/AdminNav']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Page']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['Component']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Modal']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Switch']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Dropdown']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['helpers/icon']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['models/Group']\"","webpack://@reflar/webhooks/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@reflar/webhooks/./src/admin/models/Webhook.js","webpack://@reflar/webhooks/./src/admin/components/WebhookEditModal.js","webpack://@reflar/webhooks/./src/admin/components/SettingsListItem.js","webpack://@reflar/webhooks/./src/admin/components/SettingsPage.js","webpack://@reflar/webhooks/./src/admin/index.js","webpack://@reflar/webhooks/./src/admin/addSettingsPage.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","def","Webhook","apiEndpoint","this","exists","data","id","mixin","Model","attribute","service","url","error","events","str","JSON","parse","groupId","isValid","Boolean","WebhookEditModal","init","_Modal","webhook","props","obj","fn","keys","vals","app","loadingGroup","prop","reduce","evt","exec","other","push","full","sort","group","toLowerCase","replace","concat","split","values","map","val","acc","className","title","translator","trans","content","_this","icons","2","3","store","getById","Group","MEMBER_ID","Dropdown","component","label","icon","namePlural","buttonClassName","children","all","filter","g","includes","Button","active","disabled","onclick","changeGroup","entries","_ref","a","b","propA","toUpperCase","propB","_ref2","length","translate","event","Switch","state","onchange","checked","loading","splice","indexOf","updateWebhook","then","lazyRedraw","_this2","save","group_id","Modal","SettingsListItem","services","view","errors","Select","options","update","type","withAttr","placeholder","modal","show","delete","Alert","dismissible","field","_this2$webhook$save","Component","SettingsPage","_Page","newWebhook","webhooks","addWebhook","createRecord","redraw","catch","changed","_this3","fields","some","settings","addPrefix","Page","initializers","add","models","Forum","hasMany","routes","path","extensionSettings","route","extend","AdminNav","items","AdminLinkButton","href","description"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['models/Forum'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['models/Group'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nconst transformJSON = def => str => (str && typeof str === 'string' ? JSON.parse(str) : def);\n\nexport default class Webhook extends mixin(Model, {\n    id: Model.attribute('id'),\n    service: Model.attribute('service'),\n    url: Model.attribute('url'),\n    error: Model.attribute('error'),\n    events: Model.attribute('events', transformJSON([])),\n    groupId: Model.attribute('group_id'),\n\n    isValid: Model.attribute('is_valid', Boolean),\n}) {\n    apiEndpoint() {\n        return `/reflar/webhooks${this.exists ? `/${this.data.id}` : ''}`;\n    }\n}\n","import Modal from 'flarum/components/Modal';\nimport Switch from 'flarum/components/Switch';\nimport Button from 'flarum/components/Button';\nimport Dropdown from 'flarum/components/Dropdown';\nimport icon from 'flarum/helpers/icon';\nimport Group from 'flarum/models/Group';\n\nconst sortByProp = prop => (a, b) => {\n    const propA = a[prop].toUpperCase(); // ignore upper and lowercase\n    const propB = b[prop].toUpperCase(); // ignore upper and lowercase\n\n    return propA < propB ? -1 : propA > propB ? 1 : 0;\n};\n\nconst groupBy = (obj, fn) => {\n    const keys = Object.keys(obj);\n    const vals = Object.values(obj);\n\n    return keys.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val, i) => {\n        if (!acc[val]) acc[val] = {};\n\n        acc[val][keys[i]] = vals[i];\n\n        return acc;\n    }, {});\n};\n\nexport default class WebhookEditModal extends Modal {\n    init() {\n        super.init();\n\n        this.webhook = this.props.webhook;\n\n        const events = app.data['reflar-webhooks.events'];\n\n        this.loadingGroup = m.prop(false);\n\n        this.events = groupBy(\n            events.reduce(\n                (obj, evt) => {\n                    const m = /((?:[a-z]+\\\\?)+?)\\\\Events?\\\\([a-z]+)/i.exec(evt);\n\n                    if (!m) {\n                        obj.other.push({\n                            full: evt,\n                            name: evt,\n                        });\n                        obj.other = obj.other.sort();\n                        return obj;\n                    }\n\n                    const group = m[1].toLowerCase().replace('\\\\', '.');\n\n                    if (!obj[group]) obj[group] = [];\n\n                    obj[group] = obj[group]\n                        .concat({\n                            full: evt,\n                            name: m[2],\n                        })\n                        .sort();\n\n                    return obj;\n                },\n                { other: [] }\n            ),\n            key => key.split('.')[0]\n        );\n    }\n\n    className() {\n        return 'Modal--medium';\n    }\n\n    title() {\n        return app.translator.trans('reflar-webhooks.admin.settings.modal.title');\n    }\n\n    content() {\n        const icons = {\n            2: 'fas fa-globe',\n            3: 'fas fa-user',\n        };\n\n        const group = app.store.getById('groups', this.webhook.groupId()) || app.store.getById('groups', Group.MEMBER_ID);\n\n        return (\n            <div className=\"ReflarWebhooksModal Modal-body\">\n                {app.translator.trans('reflar-webhooks.admin.settings.modal.description')}\n\n                <div className=\"Form\">\n                    <div className=\"Form-group\">\n                        {Dropdown.component({\n                            label: [icon(this.loadingGroup() ? 'fas fa-spinner fa-spin' : group.icon() || icons[group.id()]), group.namePlural()],\n                            buttonClassName: 'Button Button--danger',\n                            children: app.store\n                                .all('groups')\n                                .filter(g => ['1', '2'].includes(g.id()))\n                                .map(g =>\n                                    Button.component({\n                                        active: group.id() === g.id(),\n                                        disabled: group && group.id() === g.id(),\n                                        children: g.namePlural(),\n                                        icon: g.icon() || icons[g.id()],\n                                        onclick: this.changeGroup.bind(this, g),\n                                    })\n                                ),\n                        })}\n                    </div>\n\n                    <div className=\"Webhook-events\">\n                        {Object.entries(this.events).map(([vendor, events]) => (\n                            <div>\n                                {Object.entries(events)\n                                    .sort(sortByProp(0))\n                                    .map(([group, events]) =>\n                                        events.length ? (\n                                            <div>\n                                                <h3>{this.translate(group)}</h3>\n                                                {events.map(event =>\n                                                    Switch.component({\n                                                        state: this.webhook.events().includes(event.full),\n                                                        children: this.translate(group, event.name.toLowerCase()),\n                                                        onchange: this.onchange.bind(this, event.full),\n                                                    })\n                                                )}\n                                            </div>\n                                        ) : null\n                                    )}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    translate(group, key = 'title') {\n        return app.translator.trans(`reflar-webhooks.admin.settings.actions.${group}.${key}`);\n    }\n\n    onchange(event, checked, component) {\n        component.loading = true;\n\n        let events = this.webhook.events();\n\n        if (checked) {\n            events.push(event);\n        } else {\n            events.splice(events.indexOf(event), 1);\n        }\n\n        return this.props.updateWebhook(events).then(() => {\n            component.loading = false;\n            m.lazyRedraw();\n        });\n    }\n\n    changeGroup(group) {\n        this.loadingGroup(true);\n\n        return this.webhook\n            .save({\n                group_id: group.id(),\n            })\n            .then(() => {\n                this.loadingGroup(false);\n                m.lazyRedraw();\n            });\n    }\n}\n","import Component from 'flarum/Component';\r\nimport Select from 'flarum/components/Select';\r\nimport Button from 'flarum/components/Button';\r\nimport Alert from 'flarum/components/Alert';\r\nimport WebhookEditModal from './WebhookEditModal';\r\n\r\nexport default class SettingsListItem extends Component {\r\n    init() {\r\n        this.webhook = this.props.webhook;\r\n        this.services = this.props.services;\r\n\r\n        this.url = m.prop(this.webhook.url());\r\n        this.service = m.prop(this.webhook.service());\r\n        this.events = m.prop(this.webhook.events());\r\n        this.error = m.prop(this.webhook.error());\r\n    }\r\n\r\n    view() {\r\n        const { webhook, services } = this;\r\n\r\n        const service = webhook.service();\r\n        const errors = [webhook.error && webhook.error()];\r\n\r\n        if (!services[service]) {\r\n            errors.push(app.translator.trans('reflar-webhooks.admin.errors.service_not_found', { service }));\r\n        } else if (!webhook.isValid()) {\r\n            errors.push(app.translator.trans('reflar-webhooks.admin.errors.url_invalid'));\r\n        }\r\n\r\n        return (\r\n            <div className=\"Webhooks--row\">\r\n                <div className=\"Webhook-input\">\r\n                    {Select.component({\r\n                        options: services,\r\n                        value: service,\r\n                        onchange: this.update('service'),\r\n                    })}\r\n                    <input\r\n                        className=\"FormControl Webhook-url\"\r\n                        type=\"url\"\r\n                        value={this.url()}\r\n                        onchange={m.withAttr('value', this.update('url'))}\r\n                        placeholder={app.translator.trans('reflar-webhooks.admin.settings.help.url')}\r\n                    />\r\n                    {Button.component({\r\n                        type: 'button',\r\n                        className: 'Button Webhook-button',\r\n                        icon: 'fas fa-edit',\r\n                        onclick: () =>\r\n                            app.modal.show(\r\n                                new WebhookEditModal({\r\n                                    webhook,\r\n                                    updateWebhook: this.update('events'),\r\n                                })\r\n                            ),\r\n                    })}\r\n                    {Button.component({\r\n                        type: 'button',\r\n                        className: 'Button Button--warning Webhook-button',\r\n                        icon: 'fas fa-times',\r\n                        onclick: this.delete.bind(this),\r\n                    })}\r\n                </div>\r\n\r\n                {!this.events().length &&\r\n                    Alert.component({\r\n                        className: 'Webhook-error',\r\n                        children: app.translator.trans('reflar-webhooks.admin.settings.help.disabled'),\r\n                        dismissible: false,\r\n                    })}\r\n\r\n                {errors.filter(Boolean).map(error =>\r\n                    Alert.component({\r\n                        children: app.translator.trans(error),\r\n                        className: 'Webhook-error',\r\n                        type: 'error',\r\n                        dismissible: false,\r\n                    })\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    update(field) {\r\n        return value => {\r\n            this[field](value);\r\n\r\n            return this.webhook\r\n                .save({\r\n                    [field]: value,\r\n                })\r\n                .then(() => m.lazyRedraw());\r\n        };\r\n    }\r\n\r\n    delete() {\r\n        return this.webhook.delete().then(() => m.lazyRedraw());\r\n    }\r\n}\r\n","import Button from 'flarum/components/Button';\r\nimport Page from 'flarum/components/Page';\r\nimport Select from 'flarum/components/Select';\r\nimport SettingsListItem from './SettingsListItem';\r\nimport Webhook from '../models/Webhook';\r\n\r\nexport default class SettingsPage extends Page {\r\n    init() {\r\n        super.init();\r\n\r\n        this.values = {};\r\n        this.services = app.data['reflar-webhooks.services'].reduce((o, service) => {\r\n            o[service] = app.translator.trans(`reflar-webhooks.admin.settings.services.${service}`);\r\n            return o;\r\n        }, {});\r\n\r\n        this.newWebhook = {\r\n            service: m.prop('discord'),\r\n            url: m.prop(''),\r\n            loading: m.prop(false),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @returns {*}\r\n     */\r\n    view() {\r\n        const webhooks = app.store.all('webhooks');\r\n\r\n        return (\r\n            <div className=\"WebhooksPage\">\r\n                <div className=\"container\">\r\n                    <form>\r\n                        <h1>{app.translator.trans('reflar-webhooks.admin.settings.title')}</h1>\r\n                        <p className=\"helpText\">{app.translator.trans('reflar-webhooks.admin.settings.help.general')}</p>\r\n                        <fieldset>\r\n                            <div className=\"Webhooks--Container\">\r\n                                {webhooks.map(webhook =>\r\n                                    SettingsListItem.component({\r\n                                        webhook,\r\n                                        services: this.services,\r\n                                    })\r\n                                )}\r\n                                <div className=\"Webhooks--row\">\r\n                                    <div className=\"Webhook-input\">\r\n                                        {Select.component({\r\n                                            options: this.services,\r\n                                            value: this.newWebhook.service(),\r\n                                            onchange: this.newWebhook.service,\r\n                                        })}\r\n                                        <input\r\n                                            className=\"FormControl Webhook-url\"\r\n                                            type=\"url\"\r\n                                            placeholder={app.translator.trans('reflar-webhooks.admin.settings.help.url')}\r\n                                            onchange={m.withAttr('value', this.newWebhook.url)}\r\n                                        />\r\n                                        {Button.component({\r\n                                            type: 'button',\r\n                                            loading: this.newWebhook.loading(),\r\n                                            className: 'Button Button--warning Webhook-button',\r\n                                            icon: 'fas fa-plus',\r\n                                            onclick: this.addWebhook.bind(this),\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addWebhook() {\r\n        this.newWebhook.loading(true);\r\n\r\n        return app.store\r\n            .createRecord('webhooks')\r\n            .save({\r\n                service: this.newWebhook.service(),\r\n                url: this.newWebhook.url(),\r\n            })\r\n            .then(() => {\r\n                this.newWebhook.service('discord');\r\n                this.newWebhook.url('');\r\n                this.newWebhook.loading(false);\r\n\r\n                m.redraw();\r\n            })\r\n            .catch(() => {\r\n                this.newWebhook.loading(false);\r\n\r\n                m.redraw();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @returns boolean\r\n     */\r\n    changed() {\r\n        return this.fields.some(key => this.values[key]() !== (app.data.settings[this.addPrefix(key)] || ''));\r\n    }\r\n}\r\n","import app from 'flarum/app';\r\nimport Model from 'flarum/Model';\r\nimport Forum from 'flarum/models/Forum';\r\n\r\nimport Webhook from './models/Webhook';\r\nimport addSettingsPage from './addSettingsPage';\r\n\r\napp.initializers.add('reflar/webhooks', () => {\r\n    app.store.models.webhooks = Webhook;\r\n\r\n    Forum.prototype.webhooks = Model.hasMany('webhooks');\r\n\r\n    addSettingsPage();\r\n});\r\n","import { extend } from 'flarum/extend';\r\nimport AdminNav from 'flarum/components/AdminNav';\r\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\r\n\r\nimport SettingsPage from './components/SettingsPage';\r\n\r\nexport default function() {\r\n    app.routes['reflar-webhooks'] = { path: '/reflar/webhooks', component: SettingsPage.component() };\r\n\r\n    app.extensionSettings['reflar-webhooks'] = () => m.route(app.route('reflar-webhooks'));\r\n\r\n    extend(AdminNav.prototype, 'items', items => {\r\n        items.add(\r\n            'reflar-webhooks',\r\n            AdminLinkButton.component({\r\n                href: app.route('reflar-webhooks'),\r\n                icon: 'fas fa-external-link-alt',\r\n                children: 'Webhooks',\r\n                description: app.translator.trans('reflar-webhooks.admin.nav.desc'),\r\n            })\r\n        );\r\n    });\r\n}\r\n"],"sourceRoot":""}