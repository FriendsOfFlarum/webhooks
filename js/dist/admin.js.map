{"version":3,"sources":["webpack://@reflar/webhooks/webpack/bootstrap","webpack://@reflar/webhooks/external \"flarum.core.compat['Model']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Button']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Select']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['app']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Alert']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['models/Forum']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['utils/mixin']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['extend']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/AdminNav']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/AdminLinkButton']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Page']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['Component']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Modal']\"","webpack://@reflar/webhooks/external \"flarum.core.compat['components/Switch']\"","webpack://@reflar/webhooks/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@reflar/webhooks/./src/admin/models/Webhook.js","webpack://@reflar/webhooks/./src/admin/components/WebhookEditModal.js","webpack://@reflar/webhooks/./src/admin/components/SettingsListItem.js","webpack://@reflar/webhooks/./src/admin/components/SettingsPage.js","webpack://@reflar/webhooks/./src/admin/index.js","webpack://@reflar/webhooks/./src/admin/addSettingsPage.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","def","Webhook","apiEndpoint","this","exists","data","id","mixin","Model","attribute","service","url","error","events","str","JSON","parse","isValid","Boolean","WebhookEditModal","init","_Modal","webhook","props","app","reduce","obj","evt","exec","other","push","full","sort","group","toLowerCase","replace","concat","className","title","translator","trans","content","prop","_this","entries","a","b","propA","toUpperCase","propB","map","_ref","length","translate","event","Switch","component","state","includes","children","onchange","checked","loading","splice","indexOf","updateWebhook","then","lazyRedraw","Modal","SettingsListItem","services","view","errors","Select","options","update","type","withAttr","placeholder","Button","icon","onclick","modal","show","delete","Alert","dismissible","filter","field","_this2","_this2$webhook$save","save","Component","SettingsPage","_Page","values","newWebhook","webhooks","store","all","addWebhook","createRecord","redraw","catch","changed","_this3","fields","some","settings","addPrefix","Page","initializers","add","models","Forum","hasMany","routes","path","extensionSettings","route","extend","AdminNav","items","AdminLinkButton","href","description"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['models/Forum'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/AdminLinkButton'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Switch'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nconst transformJSON = def => str => (str && typeof str === 'string' ? JSON.parse(str) : def);\n\nexport default class Webhook extends mixin(Model, {\n    id: Model.attribute('id'),\n    service: Model.attribute('service'),\n    url: Model.attribute('url'),\n    error: Model.attribute('error'),\n    events: Model.attribute('events', transformJSON([])),\n\n    isValid: Model.attribute('is_valid', Boolean),\n}) {\n    apiEndpoint() {\n        return `/reflar/webhooks${this.exists ? `/${this.data.id}` : ''}`;\n    }\n}\n","import Modal from 'flarum/components/Modal';\nimport Switch from 'flarum/components/Switch';\n\nconst sortByProp = prop => (a, b) => {\n    const propA = a[prop].toUpperCase(); // ignore upper and lowercase\n    const propB = b[prop].toUpperCase(); // ignore upper and lowercase\n\n    return propA < propB ? -1 : propA > propB ? 1 : 0;\n};\n\nexport default class WebhookEditModal extends Modal {\n    init() {\n        super.init();\n\n        this.webhook = this.props.webhook;\n\n        const events = app.data['reflar-webhooks.events'];\n\n        this.events = events.reduce(\n            (obj, evt) => {\n                const m = /((?:[a-z]+\\\\?)+?)\\\\Events?\\\\([a-z]+)/i.exec(evt);\n\n                if (!m) {\n                    obj.other.push({\n                        full: evt,\n                        name: evt,\n                    });\n                    obj.other = obj.other.sort();\n                    return obj;\n                }\n\n                const group = m[1].toLowerCase().replace('\\\\', '.');\n\n                if (!obj[group]) obj[group] = [];\n\n                obj[group] = obj[group]\n                    .concat({\n                        full: evt,\n                        name: m[2],\n                    })\n                    .sort();\n\n                return obj;\n            },\n            { other: [] }\n        );\n    }\n\n    className() {\n        return 'Modal--medium';\n    }\n\n    title() {\n        return app.translator.trans('reflar-webhooks.admin.settings.modal.title');\n    }\n\n    content() {\n        return (\n            <div className=\"ReflarWebhooksModal Modal-body\">\n                {app.translator.trans('reflar-webhooks.admin.settings.modal.description')}\n                <div className=\"Webhook-events\">\n                    {Object.entries(this.events)\n                        .sort(sortByProp(0))\n                        .map(([group, events]) =>\n                            events.length ? (\n                                <div>\n                                    <h3>{this.translate(group)}</h3>\n                                    {events.map(event =>\n                                        Switch.component({\n                                            state: this.webhook.events().includes(event.full),\n                                            children: this.translate(group, event.name.toLowerCase()),\n                                            onchange: this.onchange.bind(this, event.full),\n                                        })\n                                    )}\n                                </div>\n                            ) : null\n                        )}\n                </div>\n            </div>\n        );\n    }\n\n    translate(group, key = 'title') {\n        return app.translator.trans(`reflar-webhooks.admin.settings.actions.${group}.${key}`);\n    }\n\n    onchange(event, checked, component) {\n        component.loading = true;\n\n        let events = this.webhook.events();\n\n        if (checked) {\n            events.push(event);\n        } else {\n            events.splice(events.indexOf(event), 1);\n        }\n\n        return this.props.updateWebhook(events).then(() => {\n            component.loading = false;\n            m.lazyRedraw();\n        });\n    }\n}\n","import Component from 'flarum/Component';\nimport Select from 'flarum/components/Select';\nimport Button from 'flarum/components/Button';\nimport Alert from 'flarum/components/Alert';\nimport WebhookEditModal from './WebhookEditModal';\n\nexport default class SettingsListItem extends Component {\n    init() {\n        this.webhook = this.props.webhook;\n        this.services = this.props.services;\n\n        this.url = m.prop(this.webhook.url());\n        this.service = m.prop(this.webhook.service());\n        this.events = m.prop(this.webhook.events());\n        this.error = m.prop(this.webhook.error());\n    }\n\n    view() {\n        const { webhook, services } = this;\n\n        const service = webhook.service();\n        const errors = [webhook.error && webhook.error()];\n\n        if (!services[service]) {\n            errors.push(app.translator.trans('reflar-webhooks.admin.errors.service_not_found', { service }));\n        } else if (!webhook.isValid()) {\n            errors.push(app.translator.trans('reflar-webhooks.admin.errors.url_invalid'));\n        }\n\n        return (\n            <div className=\"Webhooks--row\">\n                <div className=\"Webhook-input\">\n                    {Select.component({\n                        options: services,\n                        value: service,\n                        onchange: this.update('service'),\n                    })}\n                    <input\n                        className=\"FormControl Webhook-url\"\n                        type=\"url\"\n                        value={this.url()}\n                        onchange={m.withAttr('value', this.update('url'))}\n                        placeholder={app.translator.trans('reflar-webhooks.admin.settings.help.url')}\n                    />\n                    {Button.component({\n                        type: 'button',\n                        className: 'Button Webhook-button',\n                        icon: 'fas fa-edit',\n                        onclick: () =>\n                            app.modal.show(\n                                new WebhookEditModal({\n                                    webhook,\n                                    updateWebhook: this.update('events'),\n                                })\n                            ),\n                    })}\n                    {Button.component({\n                        type: 'button',\n                        className: 'Button Button--warning Webhook-button',\n                        icon: 'fas fa-times',\n                        onclick: this.delete.bind(this),\n                    })}\n                </div>\n\n                {!this.events().length &&\n                    Alert.component({\n                        className: 'Webhook-error',\n                        children: app.translator.trans('reflar-webhooks.admin.settings.help.disabled'),\n                        dismissible: false,\n                    })}\n\n                {errors.filter(Boolean).map(error =>\n                    Alert.component({\n                        children: app.translator.trans(error),\n                        className: 'Webhook-error',\n                        type: 'error',\n                        dismissible: false,\n                    })\n                )}\n            </div>\n        );\n    }\n\n    update(field) {\n        return value => {\n            this[field](value);\n\n            return this.webhook\n                .save({\n                    [field]: value,\n                })\n                .then(() => m.lazyRedraw());\n        };\n    }\n\n    delete() {\n        return this.webhook.delete().then(() => m.lazyRedraw());\n    }\n}\n","import Button from 'flarum/components/Button';\nimport Page from 'flarum/components/Page';\nimport Select from 'flarum/components/Select';\nimport SettingsListItem from './SettingsListItem';\nimport Webhook from '../models/Webhook';\n\nexport default class SettingsPage extends Page {\n    init() {\n        super.init();\n\n        this.values = {};\n        this.services = app.data['reflar-webhooks.services'].reduce((o, service) => {\n            o[service] = app.translator.trans(`reflar-webhooks.admin.settings.services.${service}`);\n            return o;\n        }, {});\n        \n        this.newWebhook = {\n            service: m.prop('discord'),\n            url: m.prop(''),\n            loading: m.prop(false),\n        };\n    }\n\n    /**\n     * @returns {*}\n     */\n    view() {\n        const webhooks = app.store.all('webhooks');\n\n        return (\n            <div className=\"WebhooksPage\">\n                <div className=\"container\">\n                    <form>\n                        <h1>{app.translator.trans('reflar-webhooks.admin.settings.title')}</h1>\n                        <p className=\"helpText\">{app.translator.trans('reflar-webhooks.admin.settings.help.general')}</p>\n                        <fieldset>\n                            <div className=\"Webhooks--Container\">\n                                {webhooks.map(webhook =>\n                                    SettingsListItem.component({\n                                        webhook,\n                                        services: this.services,\n                                    })\n                                )}\n                                <div className=\"Webhooks--row\">\n                                    <div className=\"Webhook-input\">\n                                        {Select.component({\n                                            options: this.services,\n                                            value: this.newWebhook.service(),\n                                            onchange: this.newWebhook.service,\n                                        })}\n                                        <input\n                                            className=\"FormControl Webhook-url\"\n                                            type=\"url\"\n                                            placeholder={app.translator.trans('reflar-webhooks.admin.settings.help.url')}\n                                            onchange={m.withAttr('value', this.newWebhook.url)}\n                                        />\n                                        {Button.component({\n                                            type: 'button',\n                                            loading: this.newWebhook.loading(),\n                                            className: 'Button Button--warning Webhook-button',\n                                            icon: 'fas fa-plus',\n                                            onclick: this.addWebhook.bind(this),\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        </fieldset>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n\n    addWebhook() {\n        this.newWebhook.loading(true);\n\n        return app.store\n            .createRecord('webhooks')\n            .save({\n                service: this.newWebhook.service(),\n                url: this.newWebhook.url(),\n            })\n            .then(() => {\n                this.newWebhook.service('discord');\n                this.newWebhook.url('');\n                this.newWebhook.loading(false);\n\n                m.redraw();\n            })\n            .catch(() => {\n                this.newWebhook.loading(false);\n\n                m.redraw();\n            });\n    }\n\n    /**\n     * @returns boolean\n     */\n    changed() {\n        return this.fields.some(key => this.values[key]() !== (app.data.settings[this.addPrefix(key)] || ''));\n    }\n}\n","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Forum from 'flarum/models/Forum';\n\nimport Webhook from './models/Webhook';\nimport addSettingsPage from './addSettingsPage';\n\napp.initializers.add('reflar/webhooks', () => {\n    app.store.models.webhooks = Webhook;\n\n    Forum.prototype.webhooks = Model.hasMany('webhooks');\n\n    addSettingsPage();\n});\n","import { extend } from 'flarum/extend';\nimport AdminNav from 'flarum/components/AdminNav';\nimport AdminLinkButton from 'flarum/components/AdminLinkButton';\n\nimport SettingsPage from './components/SettingsPage';\n\nexport default function() {\n    app.routes['reflar-webhooks'] = { path: '/reflar/webhooks', component: SettingsPage.component() };\n\n    app.extensionSettings['reflar-webhooks'] = () => m.route(app.route('reflar-webhooks'));\n\n    extend(AdminNav.prototype, 'items', items => {\n        items.add(\n            'reflar-webhooks',\n            AdminLinkButton.component({\n                href: app.route('reflar-webhooks'),\n                icon: 'fas fa-external-link-alt',\n                children: 'Webhooks',\n                description: app.translator.trans('reflar-webhooks.admin.nav.desc'),\n            })\n        );\n    });\n}\n"],"sourceRoot":""}