{"version":3,"sources":["webpack://@fof/webhooks/webpack/bootstrap","webpack://@fof/webhooks/external \"flarum.core.compat['common/Model']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/utils/Stream']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/utils/withAttr']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/components/Select']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/components/Alert']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/components/Switch']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/models/Forum']\"","webpack://@fof/webhooks/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/Component']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/models/Group']\"","webpack://@fof/webhooks/external \"flarum.core.compat['common/components/Modal']\"","webpack://@fof/webhooks/external \"flarum.core.compat['tags/common/helpers/tagIcon']\"","webpack://@fof/webhooks/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/webhooks/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/webhooks/./src/admin/models/Webhook.js","webpack://@fof/webhooks/./src/admin/components/WebhookEditModal.js","webpack://@fof/webhooks/./src/admin/components/SettingsListItem.js","webpack://@fof/webhooks/./src/admin/components/WebhooksPage.js","webpack://@fof/webhooks/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","Webhook","id","Model","attribute","service","url","error","events","tagId","groupId","extraText","isValid","Boolean","usePlainText","maxPostContentLength","apiEndpoint","this","exists","data","tag","app","store","getById","WebhookEditModal","oninit","vnode","webhook","attrs","Stream","Group","GUEST_ID","obj","fn","keys","vals","values","map","val","reduce","acc","groupBy","evt","exec","other","push","full","sort","group","toLowerCase","replace","concat","split","className","title","translator","trans","content","icons","2","3","onsubmit","state","onchange","type","min","bidi","onkeypress","label","icon","namePlural","buttonClassName","all","filter","g","includes","active","disabled","onclick","entries","prop","a","b","propA","toUpperCase","propB","length","translate","event","loading","isDirty","e","preventDefault","save","group_id","use_plain_text","max_post_content_length","then","redraw","checked","component","splice","indexOf","updateWebhook","Modal","SettingsListItem","services","view","errors","tagIcon","require","tagIdLoading","data-webhook-id","options","update","withAttr","placeholder","caretIcon","modal","show","dismissible","field","Component","WebhooksPage","newWebhook","loadingTags","isTagsEnabled","oncreate","find","webhooks","buildSettingComponent","setting","updateDebug","addWebhook","createRecord","changed","fields","some","settings","addPrefix","extensions","saveSettings","Event","ExtensionPage","initializers","add","models","Forum","hasMany","extensionData","registerPage"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,gBClFrDhC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,iB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,0B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,+B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,6B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,mC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,uC,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,qB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,wB,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,4B,cCApCnC,EAAOD,QAAUkC,OAAOC,KAAKC,OAAO,gC,wECArB,SAASC,EAAgB1B,EAAGqB,GAMzC,OALAK,EAAkBzB,OAAO0B,gBAAkB,SAAyB3B,EAAGqB,GAErE,OADArB,EAAE4B,UAAYP,EACPrB,IAGcA,EAAGqB,GCLb,SAASQ,EAAeC,EAAUC,GAC/CD,EAASX,UAAYlB,OAAOY,OAAOkB,EAAWZ,WAC9CW,EAASX,UAAUa,YAAcF,EACjCH,EAAeG,EAAUC,G,ICFNE,E,oJACjBC,GAAKC,IAAMC,UAAU,M,EACrBC,QAAUF,IAAMC,UAAU,W,EAC1BE,IAAMH,IAAMC,UAAU,O,EAEtBG,MAAQJ,IAAMC,UAAU,S,EACxBI,OAASL,IAAMC,UAAU,U,EAEzBK,MAAQN,IAAMC,UAAU,U,EAExBM,QAAUP,IAAMC,UAAU,Y,EAC1BO,UAAYR,IAAMC,UAAU,c,EAE5BQ,QAAUT,IAAMC,UAAU,WAAYS,S,EAEtCC,aAAeX,IAAMC,UAAU,iBAAkBS,S,EACjDE,qBAAuBZ,IAAMC,UAAU,2B,oCAEvCY,YAAA,WACI,uBAAuBC,KAAKC,OAAL,IAAkBD,KAAKE,KAAKjB,GAAO,K,EAG9DkB,IAAA,WACI,OAAOC,IAAIC,MAAMC,QAAQ,OAAQN,KAAKR,U,GAvBTN,K,4MC0BhBqB,E,gGACjBC,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAEbT,KAAKU,QAAUV,KAAKW,MAAMD,QAE1B,IAAMnB,EAASa,IAAIF,KAAK,uBAExBF,KAAKP,QAAUmB,IAAOZ,KAAKU,QAAQjB,WAAaoB,IAAMC,UACtDd,KAAKN,UAAYkB,IAAOZ,KAAKU,QAAQhB,aAAe,IACpDM,KAAKH,aAAee,IAAOZ,KAAKU,QAAQb,gBACxCG,KAAKF,qBAAuBc,IAAOZ,KAAKU,QAAQZ,wBAEhDE,KAAKT,OA1BG,SAACwB,EAAKC,GAClB,IAAMC,EAAOjE,OAAOiE,KAAKF,GACnBG,EAAOlE,OAAOmE,OAAOJ,GAE3B,OAAOE,EAAKG,IAAkB,mBAAPJ,EAAoBA,EAAK,SAACK,GAAD,OAASA,EAAIL,KAAKM,QAAO,SAACC,EAAKF,EAAK/E,GAKhF,OAJKiF,EAAIF,KAAME,EAAIF,GAAO,IAE1BE,EAAIF,GAAKJ,EAAK3E,IAAM4E,EAAK5E,GAElBiF,IACR,IAgBeC,CACVjC,EAAO+B,QACH,SAACP,EAAKU,GACF,IAAM/E,EAAI,wCAAwCgF,KAAKD,GAEvD,IAAK/E,EAMD,OALAqE,EAAIY,MAAMC,KAAK,CACXC,KAAMJ,EACN5E,KAAM4E,IAEVV,EAAIY,MAAQZ,EAAIY,MAAMG,OACff,EAGX,IAAMgB,EAAQrF,EAAE,GAAGsF,cAAcC,QAAQ,KAAM,KAW/C,OATKlB,EAAIgB,KAAQhB,EAAIgB,GAAS,IAE9BhB,EAAIgB,GAAShB,EAAIgB,GACZG,OAAO,CACJL,KAAMJ,EACN5E,KAAMH,EAAE,KAEXoF,OAEEf,IAEX,CAAEY,MAAO,MAEb,SAAC9D,GAAD,OAASA,EAAIsE,MAAM,KAAK,O,EAIhCC,UAAA,WACI,MAAO,iB,EAGXC,MAAA,WACI,OAAOjC,IAAIkC,WAAWC,MAAM,4C,EAGhCC,QAAA,WAAU,WACAC,EAAQ,CACVC,EAAG,eACHC,EAAG,eAGDZ,EAAQ3B,IAAIC,MAAMC,QAAQ,SAAUN,KAAKP,WAE/C,OACI,SAAK2C,UAAU,+BACX,UAAMA,UAAU,OAAOQ,SAAU5C,KAAK4C,SAAS9E,KAAKkC,OAChD,EAAC,IAAD,CAAQ6C,MAAO7C,KAAKH,eAAgBiD,SAAU9C,KAAKH,cAC9CO,IAAIkC,WAAWC,MAAM,2DAG1B,SAAKH,UAAU,cACX,WAAOA,UAAU,SAAShC,IAAIkC,WAAWC,MAAM,oEAE/C,OAAGH,UAAU,YAAYhC,IAAIkC,WAAWC,MAAM,mEAE9C,WACIQ,KAAK,SACLC,IAAI,IACJZ,UAAU,cACVa,KAAMjD,KAAKF,qBACXoD,WAAYlD,KAAKkD,WAAWpF,KAAKkC,SAIzC,SAAKoC,UAAU,yBACX,WAAOA,UAAU,SAAShC,IAAIkC,WAAWC,MAAM,uDAE/C,OAAGH,UAAU,YAAYhC,IAAIkC,WAAWC,MAAM,sDAE9C,WAAOQ,KAAK,OAAOX,UAAU,cAAca,KAAMjD,KAAKN,UAAWwD,WAAYlD,KAAKkD,WAAWpF,KAAKkC,SAGtG,SAAKoC,UAAU,cACX,WAAOA,UAAU,SAAShC,IAAIkC,WAAWC,MAAM,kDAC/C,OAAGH,UAAU,YAAYhC,IAAIkC,WAAWC,MAAM,iDAE9C,EAAC,IAAD,CAAUY,MAAO,CAACC,IAAKrB,EAAMqB,QAAUX,EAAMV,EAAM9C,OAAQ8C,EAAMsB,cAAeC,gBAAgB,yBAC3FlD,IAAIC,MACAkD,IAAI,UACJC,QAAO,SAACC,GAAD,MAAO,CAAC,IAAK,KAAKC,SAASD,EAAExE,SACpCmC,KAAI,SAACqC,GAAD,OACD,EAAC,IAAD,CACIE,OAAQ5B,EAAM9C,OAASwE,EAAExE,KACzB2E,SAAU7B,EAAM9C,OAASwE,EAAExE,KAC3BmE,KAAMK,EAAEL,QAAUX,EAAMgB,EAAExE,MAC1B4E,QAAS,kBAAM,EAAKpE,QAAQgE,EAAExE,QAE7BwE,EAAEJ,mBAMvB,SAAKjB,UAAU,6BACX,WAAOA,UAAU,SAAShC,IAAIkC,WAAWC,MAAM,mDAE9CnC,IAAIkC,WAAWC,MAAM,iDAErBvF,OAAO8G,QAAQ9D,KAAKT,QAAQ6B,KAAI,gBAzIrC2C,EAyIyCxE,EAAJ,YAC7B,aACKvC,OAAO8G,QAAQvE,GACXuC,MA5IjBiC,EA4IiC,EA5IxB,SAACC,EAAGC,GAC7B,IAAMC,EAAQF,EAAED,GAAMI,cAChBC,EAAQH,EAAEF,GAAMI,cAEtB,OAAOD,EAAQE,GAAS,EAAIF,EAAQE,EAAQ,EAAI,KAyIfhD,KAAI,gBAAEW,EAAF,KAASxC,EAAT,YACDA,EAAO8E,OACH,aACI,YAAK,EAAKC,UAAUvC,IACnBxC,EAAO6B,KAAI,SAACmD,GAAD,OACR,EAAC,IAAD,CACI1B,MAAO,EAAKnC,QAAQnB,SAASmE,SAASa,EAAM1C,MAC5CiB,SAAU,EAAKA,SAAShF,KAAK,EAAMyG,EAAM1C,OAExC,EAAKyC,UAAUvC,EAAOwC,EAAM1H,KAAKmF,oBAI9C,aAMxB,SAAKI,UAAU,cACX,EAAC,IAAD,CAAQW,KAAK,SAASX,UAAU,yBAAyBoC,QAASxE,KAAKwE,QAASZ,UAAW5D,KAAKyE,WAC3FrE,IAAIkC,WAAWC,MAAM,0C,EAQ9C+B,UAAA,SAAUvC,EAAOlE,GACb,YAD4B,IAAfA,MAAM,SACZuC,IAAIkC,WAAWC,MAAf,uCAA4DR,EAA5D,IAAqElE,I,EAGhF4G,QAAA,WACI,OACIzE,KAAKN,aAAeM,KAAKU,QAAQhB,aACjCM,KAAKP,YAAcO,KAAKU,QAAQjB,WAChCO,KAAKH,iBAAmBG,KAAKU,QAAQb,gBACrCG,KAAKF,wBAA0BE,KAAKU,QAAQZ,wB,EAIpD8C,SAAA,SAAS8B,GAAG,WAKR,OAJAA,EAAEC,iBAEF3E,KAAKwE,SAAU,EAERxE,KAAKU,QACPkE,KAAK,CACFlF,UAAWM,KAAKN,YAChBmF,SAAU7E,KAAKP,UACfqF,eAAgB9E,KAAKH,eACrBkF,wBAAyB/E,KAAKF,wBAA0B,IAE3DkF,MAAK,WACF,EAAKR,SAAU,EACf9H,EAAEuI,YATH,OAWI,WACH,EAAKT,SAAU,EACf9H,EAAEuI,a,EAId/B,WAAA,SAAWwB,GACO,UAAVA,EAAE7G,KACFmC,KAAK4C,SAAS8B,I,EAItB5B,SAAA,SAASyB,EAAOW,EAASC,GACrBA,EAAUX,SAAU,EAEpB,IAAIjF,EAASS,KAAKU,QAAQnB,SAQ1B,OANI2F,EACA3F,EAAOqC,KAAK2C,GAEZhF,EAAO6F,OAAO7F,EAAO8F,QAAQd,GAAQ,GAGlCvE,KAAKW,MAAM2E,cAAc/F,GAAQyF,MAAK,WACzCG,EAAUX,SAAU,EACpB9H,EAAEuI,a,UA5MgCM,GClBzBC,E,gGACjBhF,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAEbT,KAAKU,QAAUV,KAAKW,MAAMD,QAC1BV,KAAKyF,SAAWzF,KAAKW,MAAM8E,SAE3BzF,KAAKX,IAAMuB,IAAOZ,KAAKU,QAAQrB,OAC/BW,KAAKZ,QAAUwB,IAAOZ,KAAKU,QAAQtB,WACnCY,KAAKT,OAASqB,IAAOZ,KAAKU,QAAQnB,UAClCS,KAAKV,MAAQsB,IAAOZ,KAAKU,QAAQpB,SAEjCU,KAAKwE,QAAU,I,EAGnBkB,KAAA,WAAO,WACKhF,EAAsBV,KAAtBU,QAAS+E,EAAazF,KAAbyF,SAEXrG,EAAUsB,EAAQtB,UAClBuG,EAAS,CAACjF,EAAQpB,OAASoB,EAAQpB,SAEpCmG,EAASrG,GAEFsB,EAAQf,WAChBgG,EAAO/D,KAAKxB,IAAIkC,WAAWC,MAAM,0CAFjCoD,EAAO/D,KAAKxB,IAAIkC,WAAWC,MAAM,8CAA+C,CAAEnD,aAKtF,IAAMwG,EAAUC,EAAQ,IAClB1F,EAAMO,EAAQP,MACd2F,IAAiB9F,KAAKwE,QAAL,OAEvB,OACI,SAAKpC,UAAU,gBAAgB2D,kBAAiBrF,EAAQzB,MACpD,SAAKmD,UAAU,iBACX,EAAC,IAAD,CAAQ4D,QAASP,EAAUlI,MAAO6B,EAAS0D,SAAU9C,KAAKiG,OAAO,WAAYrC,SAAU5D,KAAKwE,QAAL,UAEvF,WACIpC,UAAU,0BACVW,KAAK,MACLxF,MAAOyC,KAAKX,MACZyD,SAAUoD,IAAS,QAASlG,KAAKiG,OAAO,QACxCrC,SAAU5D,KAAKwE,QAAL,IACV2B,YAAa/F,IAAIkC,WAAWC,MAAM,0CAGrCqD,GACG,EAAC,IAAD,CACItC,gBAAgB,SAChBH,MACIhD,EACI,eACM2F,GAAgBF,EAAQzF,EAAK,CAAEiC,UAAW,gBADhD,IACmEjC,EAAItD,QAGvEuD,IAAIkC,WAAWC,MAAM,kDAG7Ba,KAAM0C,EAAe,2BAA2B3F,GAAa,aAC7DiG,UAAW,MAEX,EAAC,IAAD,CAAQhD,KAAM,aAAcS,QAAS,kBAAM,EAAKoC,OAAO,SAAZ,CAAsB,QAC5D7F,IAAIkC,WAAWC,MAAM,mDAG1B,aAECnC,IAAIC,MAAMkD,IAAI,QAAQnC,KAAI,SAACjB,GAAD,OACvB,EAAC,IAAD,CAAQiD,MAAM,EAAMS,QAAS,kBAAM,EAAKoC,OAAO,SAAZ,CAAsB9F,EAAIlB,QACxD2G,EAAQzF,EAAK,CAAEiC,UAAW,gBAD/B,IACkDjC,EAAItD,YAMlE,EAAC,IAAD,CACIkG,KAAK,SACLX,UAAU,wBACVgB,KAAK,cACLS,QAAS,kBACLzD,IAAIiG,MAAMC,KAAK/F,EAAkB,CAC7BG,UACA4E,cAAe,EAAKW,OAAO,eAKvC,EAAC,IAAD,CAAQlD,KAAK,SAASX,UAAU,wCAAwCgB,KAAK,eAAeS,QAAS7D,KAAA,OAAYlC,KAAKkC,UAGxHA,KAAKT,SAAS8E,QACZ,EAAC,IAAD,CAAOjC,UAAU,gBAAgBmE,aAAa,GACzCnG,IAAIkC,WAAWC,MAAM,8CAI7BoD,EAAOnC,OAAO5D,SAASwB,KAAI,SAAC9B,GAAD,OACxB,EAAC,IAAD,CAAO8C,UAAU,gBAAgBW,KAAK,QAAQwD,aAAa,GACtDnG,IAAIkC,WAAWC,MAAMjD,S,EAO1C2G,OAAA,SAAOO,GAAO,WACV,OAAO,SAACjJ,GAAU,MAGd,OAFA,EAAKiH,QAAQgC,IAAS,EAEf,EAAK9F,QACPkE,MADE,OAEE4B,GAAQjJ,EAFV,WAII,eACNyH,MAAK,WACF,EAAKR,QAAQgC,IAAS,EAElB,EAAKA,IAAQ,EAAKA,GAAOjJ,GAE7Bb,EAAEuI,c,SAKlB,WACI,OAAOjF,KAAKU,QAAL,SAAsBsE,MAAK,kBAAMtI,EAAEuI,a,GA5HJwB,KCDzBC,E,gGACjBlG,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAEbT,KAAKmB,OAAS,GACdnB,KAAKyF,SAAWrF,IAAIF,KAAK,yBAAyBoB,QAAO,SAACvE,EAAGqC,GAEzD,OADArC,EAAEqC,GAAWgB,IAAIkC,WAAWC,MAAf,wCAA6DnD,GACnErC,IACR,IAEHiD,KAAK2G,WAAa,CACdvH,QAASwB,IAAO,WAChBvB,IAAKuB,IAAO,IACZ4D,QAAS5D,KAAO,IAGpBZ,KAAK4G,YAAc5G,KAAK6G,iB,EAG5BC,SAAA,SAASrG,GAAO,WACZ,YAAMqG,SAAN,UAAerG,GAEXT,KAAK4G,aACLxG,IAAIC,MAAM0G,KAAK,QAAQ/B,MAAK,WACxB,EAAK4B,aAAc,EAEnBlK,EAAEuI,a,EAKdzC,QAAA,WAAU,WACAwE,EAAW5G,IAAIC,MAAMkD,IAAI,YAE/B,OAAIvD,KAAK4G,YACE,EAAC,IAAD,MAIP,SAAKxE,UAAU,kBACX,SAAKA,UAAU,aACX,SAAKA,UAAU,cACVpC,KAAKiH,sBAAsB,CACxBlE,KAAM,UACNmE,QAAS,qBACT/D,MAAO,QACPqB,QAASxE,KAAKwE,QACd1B,SAAU9C,KAAKmH,YAAYrJ,KAAKkC,SAGxC,cACI,OAAGoC,UAAU,YAAYhC,IAAIkC,WAAWC,MAAM,6CAC9C,kBACI,SAAKH,UAAU,uBACV4E,EAAS5F,KAAI,SAACV,GAAD,OACV,EAAC,EAAD,CAAkBA,QAASA,EAAS+E,SAAU,EAAKA,cAEvD,SAAKrD,UAAU,iBACX,SAAKA,UAAU,iBACX,EAAC,IAAD,CAAQ4D,QAAShG,KAAKyF,SAAUlI,MAAOyC,KAAK2G,WAAWvH,UAAW0D,SAAU9C,KAAK2G,WAAWvH,UAE5F,WACIgD,UAAU,0BACVW,KAAK,MACLoD,YAAa/F,IAAIkC,WAAWC,MAAM,wCAClCO,SAAUoD,IAAS,QAASlG,KAAK2G,WAAWtH,KAC5C6D,WAAYlD,KAAKkD,WAAWpF,KAAKkC,QAGrC,EAAC,IAAD,CACI+C,KAAK,SACLyB,QAASxE,KAAK2G,WAAWnC,UACzBpC,UAAU,wCACVgB,KAAK,cACLS,QAAS7D,KAAKoH,WAAWtJ,KAAKkC,gB,EAYtEoH,WAAA,WAAa,WACT,IAAIpH,KAAK2G,WAAWnC,UAIpB,OAFAxE,KAAK2G,WAAWnC,SAAQ,GAEjBpE,IAAIC,MACNgH,aAAa,YACbzC,KAAK,CACFxF,QAASY,KAAK2G,WAAWvH,UACzBC,IAAKW,KAAK2G,WAAWtH,QAExB2F,MAAK,WACF,EAAK2B,WAAWvH,QAAQ,WACxB,EAAKuH,WAAWtH,IAAI,IACpB,EAAKsH,WAAWnC,SAAQ,GAExB9H,EAAEuI,YAXH,OAaI,WACH,EAAK0B,WAAWnC,SAAQ,GAExB9H,EAAEuI,a,EAId/B,WAAA,SAAWwB,GACO,UAAVA,EAAE7G,KACFmC,KAAKoH,c,EAObE,QAAA,WAAU,WACN,OAAOtH,KAAKuH,OAAOC,MAAK,SAAC3J,GAAD,OAAS,EAAKsD,OAAOtD,QAAYuC,IAAIF,KAAKuH,SAAS,EAAKC,UAAU7J,KAAS,Q,EAGvGgJ,cAAA,WACI,QAASvI,OAAOqJ,WAAW,gB,EAG/BR,YAAA,SAAYtE,GAGR,OAFA7C,KAAKkH,QAAQ,qBAAblH,CAAmC6C,GAE5B7C,KAAK4H,aAAa,IAAIC,MAAM,Q,GAnIDC,KCH1C1H,IAAI2H,aAAaC,IAAI,gBAAgB,WACjC5H,IAAIC,MAAM4H,OAAOjB,SAAWhI,EAE5BkJ,IAAMhK,UAAU8I,SAAW9H,IAAMiJ,QAAQ,YAEzC/H,IAAIgI,cAAJ,IAAsB,gBAAgBC,aAAa3B","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/utils/Stream'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/utils/withAttr'];","module.exports = flarum.core.compat['common/components/Select'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['common/components/Alert'];","module.exports = flarum.core.compat['common/components/Switch'];","module.exports = flarum.core.compat['common/models/Forum'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/Component'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/models/Group'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['tags/common/helpers/tagIcon'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Model from 'flarum/common/Model';\n\nexport default class Webhook extends Model {\n    id = Model.attribute('id');\n    service = Model.attribute('service');\n    url = Model.attribute('url');\n\n    error = Model.attribute('error');\n    events = Model.attribute('events');\n\n    tagId = Model.attribute('tag_id');\n\n    groupId = Model.attribute('group_id');\n    extraText = Model.attribute('extra_text');\n\n    isValid = Model.attribute('is_valid', Boolean);\n\n    usePlainText = Model.attribute('use_plain_text', Boolean);\n    maxPostContentLength = Model.attribute('max_post_content_length');\n\n    apiEndpoint() {\n        return `/fof/webhooks${this.exists ? `/${this.data.id}` : ''}`;\n    }\n\n    tag() {\n        return app.store.getById('tags', this.tagId());\n    }\n}\n","import Switch from 'flarum/common/components/Switch';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport icon from 'flarum/common/helpers/icon';\nimport Group from 'flarum/common/models/Group';\nimport Modal from 'flarum/common/components/Modal';\nimport Stream from 'flarum/common/utils/Stream';\n\nconst sortByProp = (prop) => (a, b) => {\n    const propA = a[prop].toUpperCase(); // ignore upper and lowercase\n    const propB = b[prop].toUpperCase(); // ignore upper and lowercase\n\n    return propA < propB ? -1 : propA > propB ? 1 : 0;\n};\n\nconst groupBy = (obj, fn) => {\n    const keys = Object.keys(obj);\n    const vals = Object.values(obj);\n\n    return keys.map(typeof fn === 'function' ? fn : (val) => val[fn]).reduce((acc, val, i) => {\n        if (!acc[val]) acc[val] = {};\n\n        acc[val][keys[i]] = vals[i];\n\n        return acc;\n    }, {});\n};\n\nexport default class WebhookEditModal extends Modal {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.webhook = this.attrs.webhook;\n\n        const events = app.data['fof-webhooks.events'];\n\n        this.groupId = Stream(this.webhook.groupId() || Group.GUEST_ID);\n        this.extraText = Stream(this.webhook.extraText() || '');\n        this.usePlainText = Stream(this.webhook.usePlainText());\n        this.maxPostContentLength = Stream(this.webhook.maxPostContentLength());\n\n        this.events = groupBy(\n            events.reduce(\n                (obj, evt) => {\n                    const m = /((?:[a-z]+\\\\?)+?)\\\\Events?\\\\([a-z]+)/i.exec(evt);\n\n                    if (!m) {\n                        obj.other.push({\n                            full: evt,\n                            name: evt,\n                        });\n                        obj.other = obj.other.sort();\n                        return obj;\n                    }\n\n                    const group = m[1].toLowerCase().replace('\\\\', '.');\n\n                    if (!obj[group]) obj[group] = [];\n\n                    obj[group] = obj[group]\n                        .concat({\n                            full: evt,\n                            name: m[2],\n                        })\n                        .sort();\n\n                    return obj;\n                },\n                { other: [] }\n            ),\n            (key) => key.split('.')[0]\n        );\n    }\n\n    className() {\n        return 'Modal--medium';\n    }\n\n    title() {\n        return app.translator.trans('fof-webhooks.admin.settings.modal.title');\n    }\n\n    content() {\n        const icons = {\n            2: 'fas fa-globe',\n            3: 'fas fa-user',\n        };\n\n        const group = app.store.getById('groups', this.groupId());\n\n        return (\n            <div className=\"FofWebhooksModal Modal-body\">\n                <form className=\"Form\" onsubmit={this.onsubmit.bind(this)}>\n                    <Switch state={this.usePlainText()} onchange={this.usePlainText}>\n                        {app.translator.trans('fof-webhooks.admin.settings.modal.use_plain_text_label')}\n                    </Switch>\n\n                    <div className=\"Form-group\">\n                        <label className=\"label\">{app.translator.trans('fof-webhooks.admin.settings.modal.max_post_content_length_label')}</label>\n\n                        <p className=\"helpText\">{app.translator.trans('fof-webhooks.admin.settings.modal.max_post_content_length_help')}</p>\n\n                        <input\n                            type=\"number\"\n                            min=\"0\"\n                            className=\"FormControl\"\n                            bidi={this.maxPostContentLength}\n                            onkeypress={this.onkeypress.bind(this)}\n                        />\n                    </div>\n\n                    <div className=\"Form-group hasLoading\">\n                        <label className=\"label\">{app.translator.trans('fof-webhooks.admin.settings.modal.extra_text_label')}</label>\n\n                        <p className=\"helpText\">{app.translator.trans('fof-webhooks.admin.settings.modal.extra_text_help')}</p>\n\n                        <input type=\"text\" className=\"FormControl\" bidi={this.extraText} onkeypress={this.onkeypress.bind(this)} />\n                    </div>\n\n                    <div className=\"Form-group\">\n                        <label className=\"label\">{app.translator.trans('fof-webhooks.admin.settings.modal.group_label')}</label>\n                        <p className=\"helpText\">{app.translator.trans('fof-webhooks.admin.settings.modal.group_help')}</p>\n\n                        <Dropdown label={[icon(group.icon() || icons[group.id()]), group.namePlural()]} buttonClassName=\"Button Button--danger\">\n                            {app.store\n                                .all('groups')\n                                .filter((g) => ['1', '2'].includes(g.id()))\n                                .map((g) => (\n                                    <Button\n                                        active={group.id() === g.id()}\n                                        disabled={group.id() === g.id()}\n                                        icon={g.icon() || icons[g.id()]}\n                                        onclick={() => this.groupId(g.id())}\n                                    >\n                                        {g.namePlural()}\n                                    </Button>\n                                ))}\n                        </Dropdown>\n                    </div>\n\n                    <div className=\"Form-group Webhook-events\">\n                        <label className=\"label\">{app.translator.trans('fof-webhooks.admin.settings.modal.events_label')}</label>\n\n                        {app.translator.trans('fof-webhooks.admin.settings.modal.description')}\n\n                        {Object.entries(this.events).map(([, events]) => (\n                            <div>\n                                {Object.entries(events)\n                                    .sort(sortByProp(0))\n                                    .map(([group, events]) =>\n                                        events.length ? (\n                                            <div>\n                                                <h3>{this.translate(group)}</h3>\n                                                {events.map((event) => (\n                                                    <Switch\n                                                        state={this.webhook.events().includes(event.full)}\n                                                        onchange={this.onchange.bind(this, event.full)}\n                                                    >\n                                                        {this.translate(group, event.name.toLowerCase())}\n                                                    </Switch>\n                                                ))}\n                                            </div>\n                                        ) : null\n                                    )}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className=\"Form-group\">\n                        <Button type=\"submit\" className=\"Button Button--primary\" loading={this.loading} disabled={!this.isDirty()}>\n                            {app.translator.trans('core.admin.settings.submit_button')}\n                        </Button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n    translate(group, key = 'title') {\n        return app.translator.trans(`fof-webhooks.admin.settings.actions.${group}.${key}`);\n    }\n\n    isDirty() {\n        return (\n            this.extraText() != this.webhook.extraText() ||\n            this.groupId() !== this.webhook.groupId() ||\n            this.usePlainText() !== this.webhook.usePlainText() ||\n            this.maxPostContentLength() != this.webhook.maxPostContentLength()\n        );\n    }\n\n    onsubmit(e) {\n        e.preventDefault();\n\n        this.loading = true;\n\n        return this.webhook\n            .save({\n                extraText: this.extraText(),\n                group_id: this.groupId(),\n                use_plain_text: this.usePlainText(),\n                max_post_content_length: this.maxPostContentLength() || 0,\n            })\n            .then(() => {\n                this.loading = false;\n                m.redraw();\n            })\n            .catch(() => {\n                this.loading = false;\n                m.redraw();\n            });\n    }\n\n    onkeypress(e) {\n        if (e.key === 'Enter') {\n            this.onsubmit(e);\n        }\n    }\n\n    onchange(event, checked, component) {\n        component.loading = true;\n\n        let events = this.webhook.events();\n\n        if (checked) {\n            events.push(event);\n        } else {\n            events.splice(events.indexOf(event), 1);\n        }\n\n        return this.attrs.updateWebhook(events).then(() => {\n            component.loading = false;\n            m.redraw();\n        });\n    }\n}\n","import Component from 'flarum/common/Component';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport Select from 'flarum/common/components/Select';\nimport Alert from 'flarum/common/components/Alert';\nimport Stream from 'flarum/common/utils/Stream';\nimport withAttr from 'flarum/common/utils/withAttr';\n\nimport WebhookEditModal from './WebhookEditModal';\n\nexport default class SettingsListItem extends Component {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.webhook = this.attrs.webhook;\n        this.services = this.attrs.services;\n\n        this.url = Stream(this.webhook.url());\n        this.service = Stream(this.webhook.service());\n        this.events = Stream(this.webhook.events());\n        this.error = Stream(this.webhook.error());\n\n        this.loading = {};\n    }\n\n    view() {\n        const { webhook, services } = this;\n\n        const service = webhook.service();\n        const errors = [webhook.error && webhook.error()];\n\n        if (!services[service]) {\n            errors.push(app.translator.trans('fof-webhooks.admin.errors.service_not_found', { service }));\n        } else if (!webhook.isValid()) {\n            errors.push(app.translator.trans('fof-webhooks.admin.errors.url_invalid'));\n        }\n\n        const tagIcon = require('flarum/tags/common/helpers/tagIcon');\n        const tag = webhook.tag();\n        const tagIdLoading = !!this.loading['tag_id'];\n\n        return (\n            <div className=\"Webhooks--row\" data-webhook-id={webhook.id()}>\n                <div className=\"Webhook-input\">\n                    <Select options={services} value={service} onchange={this.update('service')} disabled={this.loading['service']} />\n\n                    <input\n                        className=\"FormControl Webhook-url\"\n                        type=\"url\"\n                        value={this.url()}\n                        onchange={withAttr('value', this.update('url'))}\n                        disabled={this.loading['url']}\n                        placeholder={app.translator.trans('fof-webhooks.admin.settings.help.url')}\n                    />\n\n                    {tagIcon && (\n                        <Dropdown\n                            buttonClassName=\"Button\"\n                            label={\n                                tag ? (\n                                    <span>\n                                        {!tagIdLoading && tagIcon(tag, { className: 'Button-icon' })} {tag.name()}\n                                    </span>\n                                ) : (\n                                    app.translator.trans('fof-webhooks.admin.settings.item.tag_any_label')\n                                )\n                            }\n                            icon={tagIdLoading ? 'fas fa-spinner fa-spin' : tag ? true : 'fas fa-tag'}\n                            caretIcon={null}\n                        >\n                            <Button icon={'fas fa-tag'} onclick={() => this.update('tag_id')(null)}>\n                                {app.translator.trans('fof-webhooks.admin.settings.item.tag_any_label')}\n                            </Button>\n\n                            <hr />\n\n                            {app.store.all('tags').map((tag) => (\n                                <Button icon={true} onclick={() => this.update('tag_id')(tag.id())}>\n                                    {tagIcon(tag, { className: 'Button-icon' })} {tag.name()}\n                                </Button>\n                            ))}\n                        </Dropdown>\n                    )}\n\n                    <Button\n                        type=\"button\"\n                        className=\"Button Webhook-button\"\n                        icon=\"fas fa-edit\"\n                        onclick={() =>\n                            app.modal.show(WebhookEditModal, {\n                                webhook,\n                                updateWebhook: this.update('events'),\n                            })\n                        }\n                    />\n\n                    <Button type=\"button\" className=\"Button Button--warning Webhook-button\" icon=\"fas fa-times\" onclick={this.delete.bind(this)} />\n                </div>\n\n                {!this.events().length && (\n                    <Alert className=\"Webhook-error\" dismissible={false}>\n                        {app.translator.trans('fof-webhooks.admin.settings.help.disabled')}\n                    </Alert>\n                )}\n\n                {errors.filter(Boolean).map((error) => (\n                    <Alert className=\"Webhook-error\" type=\"error\" dismissible={false}>\n                        {app.translator.trans(error)}\n                    </Alert>\n                ))}\n            </div>\n        );\n    }\n\n    update(field) {\n        return (value) => {\n            this.loading[field] = true;\n\n            return this.webhook\n                .save({\n                    [field]: value,\n                })\n                .catch(() => {})\n                .then(() => {\n                    this.loading[field] = false;\n\n                    if (this[field]) this[field](value);\n\n                    m.redraw();\n                });\n        };\n    }\n\n    delete() {\n        return this.webhook.delete().then(() => m.redraw());\n    }\n}\n","import ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport Stream from 'flarum/common/utils/Stream';\nimport withAttr from 'flarum/common/utils/withAttr';\nimport Button from 'flarum/common/components/Button';\nimport Select from 'flarum/common/components/Select';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nimport SettingsListItem from './SettingsListItem';\n\nexport default class WebhooksPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.values = {};\n        this.services = app.data['fof-webhooks.services'].reduce((o, service) => {\n            o[service] = app.translator.trans(`fof-webhooks.admin.settings.services.${service}`);\n            return o;\n        }, {});\n\n        this.newWebhook = {\n            service: Stream('discord'),\n            url: Stream(''),\n            loading: Stream(false),\n        };\n\n        this.loadingTags = this.isTagsEnabled();\n    }\n\n    oncreate(vnode) {\n        super.oncreate(vnode);\n\n        if (this.loadingTags) {\n            app.store.find('tags').then(() => {\n                this.loadingTags = false;\n\n                m.redraw();\n            });\n        }\n    }\n\n    content() {\n        const webhooks = app.store.all('webhooks');\n\n        if (this.loadingTags) {\n            return <LoadingIndicator />;\n        }\n\n        return (\n            <div className=\"WebhookContent\">\n                <div className=\"container\">\n                    <div className=\"Form-group\">\n                        {this.buildSettingComponent({\n                            type: 'boolean',\n                            setting: 'fof-webhooks.debug',\n                            label: 'Debug',\n                            loading: this.loading,\n                            onchange: this.updateDebug.bind(this),\n                        })}\n                    </div>\n                    <form>\n                        <p className=\"helpText\">{app.translator.trans('fof-webhooks.admin.settings.help.general')}</p>\n                        <fieldset>\n                            <div className=\"Webhooks--Container\">\n                                {webhooks.map((webhook) => (\n                                    <SettingsListItem webhook={webhook} services={this.services} />\n                                ))}\n                                <div className=\"Webhooks--row\">\n                                    <div className=\"Webhook-input\">\n                                        <Select options={this.services} value={this.newWebhook.service()} onchange={this.newWebhook.service} />\n\n                                        <input\n                                            className=\"FormControl Webhook-url\"\n                                            type=\"url\"\n                                            placeholder={app.translator.trans('fof-webhooks.admin.settings.help.url')}\n                                            onchange={withAttr('value', this.newWebhook.url)}\n                                            onkeypress={this.onkeypress.bind(this)}\n                                        />\n\n                                        <Button\n                                            type=\"button\"\n                                            loading={this.newWebhook.loading()}\n                                            className=\"Button Button--warning Webhook-button\"\n                                            icon=\"fas fa-plus\"\n                                            onclick={this.addWebhook.bind(this)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </fieldset>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n\n    addWebhook() {\n        if (this.newWebhook.loading()) return;\n\n        this.newWebhook.loading(true);\n\n        return app.store\n            .createRecord('webhooks')\n            .save({\n                service: this.newWebhook.service(),\n                url: this.newWebhook.url(),\n            })\n            .then(() => {\n                this.newWebhook.service('discord');\n                this.newWebhook.url('');\n                this.newWebhook.loading(false);\n\n                m.redraw();\n            })\n            .catch(() => {\n                this.newWebhook.loading(false);\n\n                m.redraw();\n            });\n    }\n\n    onkeypress(e) {\n        if (e.key === 'Enter') {\n            this.addWebhook();\n        }\n    }\n\n    /**\n     * @returns boolean\n     */\n    changed() {\n        return this.fields.some((key) => this.values[key]() !== (app.data.settings[this.addPrefix(key)] || ''));\n    }\n\n    isTagsEnabled() {\n        return !!flarum.extensions['flarum-tags'];\n    }\n\n    updateDebug(state) {\n        this.setting('fof-webhooks.debug')(state);\n\n        return this.saveSettings(new Event(null));\n    }\n}\n","import Model from 'flarum/common/Model';\nimport Forum from 'flarum/common/models/Forum';\n\nimport Webhook from './models/Webhook';\nimport WebhooksPage from './components/WebhooksPage';\n\napp.initializers.add('fof/webhooks', () => {\n    app.store.models.webhooks = Webhook;\n\n    Forum.prototype.webhooks = Model.hasMany('webhooks');\n\n    app.extensionData.for('fof-webhooks').registerPage(WebhooksPage);\n});\n"],"sourceRoot":""}